#!/usr/bin/bash

# Script to convert old waf options to known new meson options for mpv

# Usage: ./mpv_convert.sh [-i] file
# file: file containing the old waf options

# Example: ./mpv_convert.sh -i mpv_options.txt
# -i: in-place edit

in_place=false
# Path to the file containing the old waf options
file=/dev/null

# Parse the command line arguments
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
    -i)
        in_place=true
        shift
        ;;
    *)
        file="$1"
        shift
        break
        ;;
    esac
done
unset key

case $file in
-h | --help | /dev/null)
    echo "Usage: $0 [-i] [--no-comment] file"
    echo "file: file containing the old waf options"
    echo "-i: in-place edit"
    echo "--no-comment: do not add comments to the new options"
    exit 1
    ;;
esac

set --

# Check if the file exists
if [ ! -f "$file" ]; then
    echo "File $file does not exist"
    exit 1
fi

# Check if the file is empty
if [ ! -s "$file" ]; then
    exit 0
fi

# slurp all of the old options into an array
old_options=()
while IFS= read -r line; do
    old_options+=("$line")
done < "$file"

convert_options() {
    sed -E '
# removed options
s;--(enable|disable)-(asm|android|clang*database|tvos|swift-static);# & has been removed;g
# renamed options
s;--(enable|disable)-gl-wayland;-Degl-wayland=[feature \1];g
s;--(enable|disable)-swift;-Dswift-build=[feature \1];g
# build_options
s;--enable-lgpl;-Dgpl=false;g
s;--disable-lgpl;-Dgpl=true;g
s;--(enable|disable)-cplayer;-Dcplayer=[bool \1];g
s;--enable-libmpv-shared;-Dlibmpv=true --default-library=shared;g
s;--enable-libmpv-static;-Dlibmpv=true --default-library=static;g
s;--disable-libmpv-shared;-Dlibmpv=false;g
s;--disable-libmpv-static;-Dlibmpv=false;g
s;--enable-static-build;--default-library=static;g
s;--disable-static-build;--default-library=shared;g
s;--(enable|disable)-build-date;-Dbuild-date=[bool \1];g
s;--enable-optimize;--optimization=3;g
s;--disable-optimize;--optimization=0;g
s;--enable-debug-build;--debug;g
s;--disable-debug-build;# [no equivalent to --disable-debug-build];g
s;--(enable|disable)-tests;-Dtests=[bool \1];g
s;--(enable|disable)-ta-leak-report;-Dta-leak-report=[bool \1];g
# complicated lua stuff here
s;--(enable|disable)-lua;-Dlua=[feature \1];g
s;--lua=luajit;-Dlua=luajit;g
s;--lua=luadef5[0-9];-Dlua=lua;g
s;--lua=lua5([.0-9]+);-Dlua=lua5\\1;g
s;--lua=lua-5.([0-9]+);-Dlua=lua-5.\\1;g
# Catch all
s;--(enable|disable)-([-A-Za-z]*);-D\\2=[feature \1];g
' <<< "$*" |
        sed -E '
s;\[feature enable\];enabled;g
s;\[feature disable\];disabled;g
s;\[bool enable\];true;g
s;\[bool disable\];false;g
'
}

new_file=$($in_place && mktemp -t "mpv-configure-XXXXXX" || echo /dev/stdout)

# Write the new file
cat > "$new_file" << EOF
# This file was generated by mpv_convert.sh from $file
# It is intended to be used by the meson build system.
EOF

for ((i = 0; i < ${#old_options[@]}; ++i)); do
    printf %s\\n "$(convert_options "${old_options[$i]}")" >> "$new_file"
done

# Replace the old file with the new one
if $in_place; then
    mv -f "$new_file" "$file"
fi
